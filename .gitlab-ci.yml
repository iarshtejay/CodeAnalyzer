image: node:16.14.0

default:
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - apt-get install -u zip unzip
    - gem install dpl

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - deploy_uat
  - deploy_prod
  - sonarqube-check

build:
  stage: build
  tags:
    - dalfcs_gitlab_docker_ci
  script:
    - cd codeanalyzer-backend
    # - npm install

test:
  stage: test
  script:
    - echo "Pipeline test started"
  tags:
    - dalfcs_gitlab_docker_ci

deploy_uat:
  stage: deploy_uat
  tags:
    - dalfcs_gitlab_docker_ci
  script:
    - echo "dbURL=$DATABASE_TEST_URL" >> .env
    - echo "dbUserName=$DATABASE_TEST_USERNAME" >> .env
    - echo "dbPassword=$DATABASE_TEST_PASSWORD" >> .env
    - echo "dbDriver=$DATABASE_DRIVER" >> .env
    - echo "Deploying the develop pipeline"
    - chmod og-rwx ${DEPLOY_SSH_KEY}
    - git clone https://git.cs.dal.ca/courses/2022-winter/csci-5308/group4.git
    - git checkout uat
    - cd group4
    - yarn
  only:
    - uat

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - qurram # or the name of your main branch

deploy_prod:
  stage: deploy_prod
  script:
    - cd codeanalyzer-backend
    - echo "dbURL=$DATABASE_PROD_URL" > .env
    - echo "dbUserName=$DATABASE_PROD_USERNAME" >> .env
    - echo "dbPassword=$DATABASE_PROD_PASSWORD" >> .env
    - echo "dbDriver=$DATABASE_DRIVER" >> .env
    - echo "Deploying the release pipeline"
    - chmod og-rwx ${DEPLOY_PROD_SSH_KEY}
    - dpl --provider=heroku --app=$HEROKU_APP --api-key=$HEROKU_API_KEY
  only:
    - main
